<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gyh.forestry.mapper.ScenicSpotMapper">
    <resultMap id="BaseResultMap" type="org.gyh.forestry.domain.ScenicSpot">
        <!--@mbg.generated-->
        <!--@Table scenic_spot-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, "name", create_time, creator
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from scenic_spot
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from scenic_spot
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="org.gyh.forestry.domain.ScenicSpot">
        <!--@mbg.generated-->
        insert into scenic_spot (id, "name", create_time,
        creator)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{creator,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="org.gyh.forestry.domain.ScenicSpot">
        <!--@mbg.generated-->
        insert into scenic_spot
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                "name",
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="creator != null">
                creator,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.gyh.forestry.domain.ScenicSpot">
        <!--@mbg.generated-->
        update scenic_spot
        <set>
            <if test="name != null">
                "name" = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.gyh.forestry.domain.ScenicSpot">
        <!--@mbg.generated-->
        update scenic_spot
        set "name" = #{name,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        creator = #{creator,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from scenic_spot
    </select>

    <select id="selectByName" resultMap="BaseResultMap">
        select sc.*
        from scenic_spot sc
        left join point_info pi on sc.id = pi.scenic_spot_id
        <where>
            <if test="scenicSpotName != null and scenicSpotName != ''">
                sc."name" like concat('%', #{scenicSpotName}, '%')
            </if>
            <if test="name != null and name != ''">
                and pi."name" like concat('%', #{name}, '%')
            </if>
            <if test="startTime != null">
                and pi.create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and pi.create_time &lt;= #{endTime}
            </if>
        </where>
        GROUP BY sc.id
    </select>
</mapper>
