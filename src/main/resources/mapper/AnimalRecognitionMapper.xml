<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gyh.forestry.mapper.AnimalRecognitionMapper">
    <resultMap id="BaseResultMap" type="org.gyh.forestry.domain.AnimalRecognition">
        <!--@mbg.generated-->
        <!--@Table animal_recognition-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="location_zh" jdbcType="VARCHAR" property="locationZh"/>
        <result column="location" jdbcType="OTHER" property="location"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
        <result column="details" jdbcType="VARCHAR" property="details"/>
        <result column="point_id" jdbcType="INTEGER" property="pointId"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, location_zh, "location", "type", create_time, "name", creator, pic, details,
        point_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from animal_recognition
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from animal_recognition
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="org.gyh.forestry.domain.AnimalRecognition">
        <!--@mbg.generated-->
        insert into animal_recognition (id, location_zh, "location",
        "type", create_time, "name",
        creator, pic, details,
        point_id)
        values (#{id,jdbcType=INTEGER}, #{locationZh,jdbcType=VARCHAR}, #{location,jdbcType=OTHER},
        #{type,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR},
        #{creator,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{details,jdbcType=VARCHAR},
        #{pointId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="org.gyh.forestry.domain.AnimalRecognition" useGeneratedKeys="true"
            keyProperty="id">
        <!--@mbg.generated-->
        insert into animal_recognition
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="locationZh != null">
                location_zh,
            </if>
            <if test="location != null">
                "location",
            </if>
            <if test="type != null">
                "type",
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="name != null">
                "name",
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="pic != null">
                pic,
            </if>
            <if test="details != null">
                details,
            </if>
            <if test="pointId != null">
                point_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="locationZh != null">
                #{locationZh,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                #{location,jdbcType=OTHER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="pic != null">
                #{pic,jdbcType=VARCHAR},
            </if>
            <if test="details != null">
                #{details,jdbcType=VARCHAR},
            </if>
            <if test="pointId != null">
                #{pointId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.gyh.forestry.domain.AnimalRecognition">
        <!--@mbg.generated-->
        update animal_recognition
        <set>
            <if test="locationZh != null">
                location_zh = #{locationZh,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                "location" = #{location,jdbcType=OTHER},
            </if>
            <if test="type != null">
                "type" = #{type,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                "name" = #{name,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="pic != null">
                pic = #{pic,jdbcType=VARCHAR},
            </if>
            <if test="details != null">
                details = #{details,jdbcType=VARCHAR},
            </if>
            <if test="pointId != null">
                point_id = #{pointId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.gyh.forestry.domain.AnimalRecognition">
        <!--@mbg.generated-->
        update animal_recognition
        set location_zh = #{locationZh,jdbcType=VARCHAR},
        "location" = #{location,jdbcType=OTHER},
        "type" = #{type,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        "name" = #{name,jdbcType=VARCHAR},
        creator = #{creator,jdbcType=VARCHAR},
        pic = #{pic,jdbcType=VARCHAR},
        details = #{details,jdbcType=VARCHAR},
        point_id = #{pointId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from animal_recognition
    </select>

    <select id="selectByQuery" resultMap="BaseResultMap">
        select ar.id,
        ar.location_zh,
        ar."location",
        ar.create_time,
        ar.creator,
        ar."name",
        ar.pic,
        ar.details,
        at.name as type
        from animal_recognition as ar
        left join animal_manage an on ar.name = an.name and an.enable = true
        left join animal_type at on at.id = an.animal_type_id
        <where>
            <if test="name != null and name != ''">
                ar.name = #{name}
            </if>
            <if test="type != null and type != ''">
                and ar.type = #{type}
            </if>
        </where>
        order by ar.create_time desc
    </select>

    <select id="statisticAnimalType" resultType="org.gyh.forestry.dto.resp.StatisticAnimalTypeResp">
        select at.name as name,
        count(at.name) as count
        from animal_recognition as ar
        left join animal_manage an on ar.name = an.name and an.enable = true
        left join animal_type at on at.id = an.animal_type_id
        where at.name is not null
        <if test="startTime != null">
            and ar.create_time &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            and ar.create_time &lt;= #{endTime}
        </if>
        group by at.name
    </select>

    <select id="statisticAnimalByMonth" resultType="org.gyh.forestry.dto.resp.StatisticAnimalByMonthResp">
        SELECT EXTRACT(YEAR FROM create_time) AS year,
        EXTRACT(MONTH FROM create_time) AS month,
        COUNT(*) AS count
        FROM animal_recognition
        <where>
            <if test="startTime != null">
                create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and create_time &lt;= #{endTime}
            </if>
        </where>
        GROUP BY year, month
        ORDER BY year, month;
    </select>

    <select id="statisticAnimalByCount" resultType="org.gyh.forestry.dto.resp.StatisticAnimalByCount">
        SELECT ar.name AS name,
        COUNT(*) AS count
        FROM animal_recognition AS ar
        LEFT JOIN animal_manage an ON ar.name = an.name AND an.enable = true
        <where>
            <if test="startTime != null">
                ar.create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and ar.create_time &lt;= #{endTime}
            </if>
        </where>
        group by ar.name
    </select>

    <select id="animalByArea" resultType="org.gyh.forestry.dto.resp.StatisticAnimalArea">
        SELECT ar.name, ss.id as point_id, ss.name as type_name
        FROM "animal_recognition" ar
                 LEFT JOIN point_info pi on ar.point_id = pi.id
                 LEFT JOIN scenic_spot ss on ss.id = pi.scenic_spot_id
    </select>

    <select id="randomImage" resultType="java.lang.String">
        SELECT pic
        FROM "animal_recognition"
<!--        where type = 'image'-->
        ORDER BY RANDOM()
        LIMIT 10;
    </select>

    <select id="selectRepeat" resultType="java.lang.Integer">
        select count(1)
        from animal_recognition
        where name = #{name}
          and pic = #{pic}
          and type = #{type}
          and location = #{location}
    </select>
</mapper>
