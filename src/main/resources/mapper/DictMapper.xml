<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gyh.forestry.mapper.DictMapper">
    <resultMap id="BaseResultMap" type="org.gyh.forestry.domain.Dict">
        <!--@mbg.generated-->
        <!--@Table dict-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="key" jdbcType="VARCHAR" property="key"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="value" jdbcType="VARCHAR" property="value"/>
        <result column="describe" jdbcType="VARCHAR" property="describe"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        "key",
        "type",
        "value",
        describe
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from dict
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from dict
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="org.gyh.forestry.domain.Dict" useGeneratedKeys="true" keyProperty="id">
        <!--@mbg.generated-->
        insert into dict (id, "key", "type",
                          "value", describe)
        values (#{id,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
                #{value,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="org.gyh.forestry.domain.Dict" useGeneratedKeys="true" keyProperty="id">
        <!--@mbg.generated-->
        insert into dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="key != null">
                "key",
            </if>
            <if test="type != null">
                "type",
            </if>
            <if test="value != null">
                "value",
            </if>
            <if test="describe != null">
                describe,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="key != null">
                #{key,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                #{value,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                #{describe,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.gyh.forestry.domain.Dict">
        <!--@mbg.generated-->
        update dict
        <set>
            <if test="key != null">
                "key" = #{key,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                "type" = #{type,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                "value" = #{value,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                describe = #{describe,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.gyh.forestry.domain.Dict">
        <!--@mbg.generated-->
        update dict
        set "key"    = #{key,jdbcType=VARCHAR},
            "type"   = #{type,jdbcType=VARCHAR},
            "value"  = #{value,jdbcType=VARCHAR},
            describe = #{describe,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteByKey">
        delete
        from dict
        where "key"    = #{key,jdbcType=VARCHAR}
    </delete>

    <select id="selectByKey" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from dict
        where "key"    = #{key,jdbcType=VARCHAR}
    </select>

    <select id="findByPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from dict
    </select>
</mapper>
